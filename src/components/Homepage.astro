---
import { getCollection } from 'astro:content'
import { Markdown } from '@astropub/md'

import Badge from './Badge.astro'

import { getPostsForHomepage, getNewsletters, groupPostsByYear, resizePostCover, getPrimaryTag } from '../lib'

import PostList from './post/PostList.astro'
import Newsletter from './newsletter/CallToAction.astro'
import TopPosts from './TopPosts.astro'
import LearnTypeScript from './LearnTypeScript.astro'

const resizeCover = (post) => resizePostCover(post, { width: 400, height: 300 })
const posts = getPostsForHomepage(await getCollection('bai-viet'))
---

<style>
  .posts {
    --flow-space: 0.5em;

    display: grid;
    gap: 2rem;
  }

  .article :global(code) {
    font-size: var(--code-font-size);
    background-color: var(--code-background);
    color: var(--code-color);
    font-weight: 600;
    padding-inline: var(--size-1);
    border-radius: var(--radius-1);
  }

  .title {
    font-weight: 700;
    font-size: var(--font-size-3);
  }

  .excerpt {
    color: var(--stone-8);
  }

  .meta {
    color: var(--stone-8);
    font-size: 0.9em;
    display: flex;
    gap: 1ch;
    font-style: normal;
  }

  .link {
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }

  .header {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1ch;
  }
</style>

<div class="posts">
  {
    posts.map(({ data }) => {
      const { tag, variant } = getPrimaryTag(data.tags)

      return (
        <article class="flow article">
          <a href={data.url} class="link header">
            <h2 class="title">
              <Markdown.Inline of={data.title} />
            </h2>
          </a>

          <p class="excerpt">
            <Markdown.Inline of={data.excerpt} />
          </p>

          <address class="meta">
            <Badge variant={variant}>#{tag}</Badge>

            <time datetime="" class="published_at">
              {data.formattedDate}
            </time>
          </address>
        </article>
      )
    })
  }
</div>
