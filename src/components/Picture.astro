---
import { transformImage } from '@/lib'

const { figure, cover: baseCover, showCaption = true } = Astro.props

const cover = figure?.src ?? baseCover
const sources =
  cover != null
    ? [
        { media: '(width < 40em)', srcset: transformImage(cover, { c: 'scale', w: 960, h: null }) },
        { media: '(width < 64em)', srcset: transformImage(cover, { c: 'scale', w: 1200, h: null }) },
      ]
    : []

const fallbackCover = cover != null ? transformImage(cover, { c: 'scale', w: 1200, h: null }) : cover
---

{
  figure != null && fallbackCover != null && (
    <figure>
      <picture>
        {sources.map(({ media, srcset }) => (
          <source {media} {srcset} />
        ))}

        <img src={fallbackCover} alt={figure.alt} loading="lazy" decoding="async" />
      </picture>

      {showCaption && (
        <>
          {figure.author && figure.credit ? (
            <figcaption>
              {figure.alt}. Nguồn ảnh: <a href={figure.author.url}>{figure.author.name}</a> //{' '}
              <a href={figure.credit.url}>{figure.credit.from}</a>
            </figcaption>
          ) : (
            <figcaption>{figure.alt}</figcaption>
          )}
        </>
      )}
    </figure>
  )
}
