---
import { transformImage } from '@/lib'

const { figure, cover: baseCover, showCaption = true } = Astro.props

const cover = figure?.src ?? baseCover
const sources =
  cover != null
    ? [
        { media: '(width < 40em)', srcset: transformImage(cover, { c: 'fill', w: 640, h: 360 }) },
        { media: '(width < 64em)', srcset: transformImage(cover, { c: 'fill', w: 1024, h: 576 }) },
      ]
    : []

const fallbackCover = cover != null ? transformImage(cover, { c: 'fill', w: 1024, h: 576 }) : cover
---

{
  figure != null && fallbackCover != null && (
    <style>

      .image {
        aspect-ratio: 16 / 9;
        background-color: rgba(206, 212, 218, 0.5);
      }
    </style>
    <figure class="flow">
      <picture class="picture">
        {sources.map(({ media, srcset }) => (
          <source {media} {srcset} />
        ))}

        <img role="img" class="image" src={fallbackCover} alt={figure.alt} loading="lazy" decoding="async" />
      </picture>

      {showCaption && figure.alt && (
        <figcaption>
          <strong>{figure.alt}.</strong>

          {figure.author && (
            <>
              Nguồn ảnh: <a href={figure.author.url}>{figure.author.name}</a>
            </>
          )}

          {figure.credit && (
            <>
              // <a href={figure.credit.url}>{figure.credit.from}</a>
            </>
          )}
        </figcaption>
      )}
    </figure>
  )
}
